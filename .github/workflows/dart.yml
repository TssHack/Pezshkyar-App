name: Flutter Multi-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: Flutter Pub Get
        run: flutter pub get

      # بازسازی پوشه های Linux/MacOS در صورت نبودن
      - name: Ensure Platform Runners
        if: runner.os != 'Windows'
        run: |
          if [ ! -d "linux" ] && [ "$RUNNER_OS" == "Linux" ]; then
            flutter create .
          fi
          if [ ! -d "macos" ] && [ "$RUNNER_OS" == "macOS" ]; then
            flutter create .
          fi

      # Build Android
      - name: Build Android APK
        if: matrix.os == 'ubuntu-latest'
        run: flutter build apk --release

      # Build iOS
      - name: Build iOS IPA
        if: matrix.os == 'macos-latest'
        run: flutter build ipa --release --no-codesign

      # Build Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: flutter build windows --release

      # Build Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: flutter build linux --release

      # Build macOS
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: flutter build macos --release

      # Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/ipa/**/*.ipa
            build/windows/runner/Release/**
            build/linux/x64/release/bundle/**
            build/macos/Build/Products/Release/**
